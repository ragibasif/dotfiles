# ~./shellrc

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# stolen from: https://unix.stackexchange.com/questions/9501/how-to-test-what-shell-i-am-using-in-a-terminal
# get the current shell since $SHELL only returns the default shell
unset SH

if [ -n "$ZSH_VERSION" ] && type zstyle >/dev/null 2>&1; then           # zsh
  SH=$(basename `command -v zsh`)
elif [ -x "$BASH_VERSION" ] && type caller >/dev/null 2>&1; then        # bash
  SH=$(basename `command -v bash`)
elif [ -x "$shell" ] && which setenv |grep -l builtin >/dev/null; then  # tcsh
  echo "DANGER: this script is likely not compatible with C shells!"
  sleep 5
  setenv SH "$(basename $shell)"
fi

# verify
if [ ! -x "$SH" ]; then
  SH=`command -v "$(ps $$ |awk 'NR == 2 { print $NF }')"`
  [ -x "$SH" ] || SH="$(basename "${SHELL:-/bin/sh}")"  # default if verify fails
fi

# Auto-start tmux if not running
if command -v tmux &>/dev/null && [[ -z "$TMUX" ]]; then
    tmux attach || tmux new
fi

# Prefer fastfetch if installed
if command -v fastfetch &>/dev/null; then
    fastfetch
# Fallback to neofetch
elif command -v neofetch &>/dev/null; then
    neofetch
# Minimal built-in display
else
    echo -e "\n\e[1m$(whoami)@$(hostname)\e[0m"
    echo -e "OS: $(uname -srm)"
    echo -e "Shell: $(basename "$SHELL") $(BASH_VERSION:-$ZSH_VERSION)"
    echo -e "Uptime: $(uptime -p 2>/dev/null || uptime | awk -F',' '(print $1)')\n"
fi

# zoxide: https://github.com/ajeetdsouza/zoxide
if command -v zoxide &>/dev/null; then
    eval "$(zoxide init $(basename "$SHELL"))"
    alias cd='z'
fi

# Restart the shell.
restart-shell() {
  exec -l $SHELL
}

# aliases

# Get OS type (Linux, Darwin/macOS, etc.)
OS="$(uname -s)"

# Linux-specific aliases
if [ "$OS" = "Linux" ]; then
    alias ls='ls --color=auto'
fi

# macOS-specific aliases
if [ "$OS" = "Darwin" ]; then
    alias ls='ls -G'
fi

# lsd: https://github.com/lsd-rs/lsd
if command -v lsd &>/dev/null; then
    alias ls='lsd'
fi

# Listing
alias l='ls -l'
alias lla='ls -la'
alias ll='ls -lh'
alias la='ls -lAh'


# eza: https://github.com/eza-community/eza
if command -v eza &>/dev/null; then
    alias tree='eza -TR --classify=always --color=always --icons=always --absolute=off'
fi

# bat: https://github.com/sharkdp/bat
if command -v bat &>/dev/null; then
    alias cat='bat'
fi

# fzf: https://github.com/junegunn/fzf
if command -v fzf &>/dev/null; then
    alias fzf='fzf --preview "bat --color=always --style=numbers --line-range=:500 {}"'
fi

if [ "$SH" = "bash" ]; then
    eval "$(fzf --bash)"
elif [ "$SH" = "zsh" ]; then
    source <(fzf --zsh)
elif [ "$SH" = "fish" ]; then
    fzf --fish | source
fi

# fd: https://github.com/sharkdp/fd
if command -v fd &>/dev/null; then
    find='fd'
fi

# Disk space
alias df='df -h'
alias du='du -h'

# Editor
alias v="nvim"

# Open vim without loading the vimrc.
alias vimnilla='vi -u NONE'

# Open neovim without loading the init.lua.
alias nvimnilla='nvim -u NONE'

# Search
alias grep='grep --color=auto'

# Safety nets to prevent accidents
alias rm='rm -iv'
alias cp='cp -iv'
alias mv='mv -iv'

# Extras
alias yt-dlp='yt-dlp -P "~/Music" -x --audio-format mp3 --audio-quality 0 -o "%(uploader)s_%(playlist)s/%(title)s.%(ext)s" --embed-metadata --parse-metadata "%(title)s:%(meta_title)s" --parse-metadata "%(uploader)s:%(meta_artist)s" --parse-metadata "%(playlist)s:%(meta_album)s" --parse-metadata "%(playlist_index)s:%(meta_track)s" -i'
alias valgrind='valgrind --tool=memcheck --leak-check=full --show-reachable=yes --error-exitcode=1'

# Package Management
## For brew (macOS)
alias brewup='brew update && brew upgrade && brew cleanup'
